{"version":3,"file":"static/js/574.83ffc691.chunk.js","mappings":"+QAeMA,EAAeC,EAAAA,KAAaC,MAAM,CACtCC,KAAMF,EAAAA,KACHG,IAAI,EAAG,cACPC,IAAI,GAAI,aACRC,SAAS,YACZC,SAAUN,EAAAA,KACPG,IAAI,EAAG,cACPC,IAAI,GAAI,aACRC,SAAS,YACZE,MAAOP,EAAAA,KAAaO,MAAM,iBAAiBF,SAAS,cAoEtD,UAjEqB,WACnB,IAAMG,GAAWC,EAAAA,EAAAA,MACjB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CAACC,GAAG,WAAWC,MAAM,SAASC,QAAQ,SAAQC,UACjDL,EAAAA,EAAAA,KAACM,EAAAA,GAAG,CAACJ,GAAG,QAAQK,EAAG,EAAGC,QAAQ,KAAKC,EAAG,GAAGJ,UACvCL,EAAAA,EAAAA,KAACU,EAAAA,GAAM,CACLC,cAAe,CACbnB,KAAM,GACNK,MAAO,GACPD,SAAU,IAEZgB,iBAAkBvB,EAClBwB,SAAU,SAACC,EAAMC,GAAqB,IAAjBC,EAASD,EAATC,UACnBlB,GAASmB,EAAAA,EAAAA,IAAcH,IACvBE,GACF,EAAEX,SAED,SAAAa,GAAA,IAAGC,EAAYD,EAAZC,aAAcC,EAAMF,EAANE,OAAQC,EAAOH,EAAPG,QAAO,OAC/BrB,EAAAA,EAAAA,KAACsB,EAAAA,GAAI,CAACT,SAAUM,EAAad,UAC3BkB,EAAAA,EAAAA,MAACC,EAAAA,EAAM,CAACC,QAAS,EAAGtB,MAAM,aAAYE,SAAA,EACpCkB,EAAAA,EAAAA,MAACG,EAAAA,GAAW,CAACC,YAAaP,EAAO5B,MAAQ6B,EAAQ7B,KAAKa,SAAA,EACpDL,EAAAA,EAAAA,KAAC4B,EAAAA,EAAS,CAACC,QAAQ,OAAMxB,SAAC,UAC1BL,EAAAA,EAAAA,KAAC8B,EAAAA,GAAK,CACJC,GAAIC,EAAAA,EACJC,GAAG,OACHzC,KAAK,OACL0C,KAAK,OACLC,QAAQ,YAEVnC,EAAAA,EAAAA,KAACoC,EAAAA,GAAgB,CAAA/B,SAAEe,EAAO5B,WAE5B+B,EAAAA,EAAAA,MAACG,EAAAA,GAAW,CAACC,YAAaP,EAAOvB,OAASwB,EAAQxB,MAAMQ,SAAA,EACtDL,EAAAA,EAAAA,KAAC4B,EAAAA,EAAS,CAACC,QAAQ,QAAOxB,SAAC,mBAC3BL,EAAAA,EAAAA,KAAC8B,EAAAA,GAAK,CACJC,GAAIC,EAAAA,EACJC,GAAG,QACHzC,KAAK,QACL0C,KAAK,QACLC,QAAQ,SACRE,YAAY,yBAGhBd,EAAAA,EAAAA,MAACG,EAAAA,GAAW,CAACC,YAAaP,EAAOxB,UAAYyB,EAAQzB,SAASS,SAAA,EAC5DL,EAAAA,EAAAA,KAAC4B,EAAAA,EAAS,CAACC,QAAQ,WAAUxB,SAAC,cAC9BL,EAAAA,EAAAA,KAAC8B,EAAAA,GAAK,CACJC,GAAIC,EAAAA,EACJC,GAAG,WACHzC,KAAK,WACL0C,KAAK,WACLC,QAAQ,SACRG,aAAa,SAEftC,EAAAA,EAAAA,KAACoC,EAAAA,GAAgB,CAAA/B,SAAEe,EAAOxB,eAE5BI,EAAAA,EAAAA,KAACuC,EAAAA,EAAM,CAACL,KAAK,SAASM,YAAY,OAAOC,MAAM,OAAMpC,SAAC,cAInD,OAMnB,C","sources":["components/pages/register.jsx"],"sourcesContent":["import { Formik, Field, Form } from 'formik';\nimport {\n  Box,\n  Button,\n  Flex,\n  FormControl,\n  FormLabel,\n  FormErrorMessage,\n  Input,\n  VStack,\n} from '@chakra-ui/react';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { registerThunk } from 'components/redux/auth/authSlice';\n\nconst SigninSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'Too Short!')\n    .max(40, 'Too Long!')\n    .required('Required'),\n  password: Yup.string()\n    .min(6, 'Too Short!')\n    .max(15, 'Too Long!')\n    .required('Required'),\n  email: Yup.string().email('Invalid email').required('Required'),\n});\n\nconst Registration = () => {\n  const dispatch = useDispatch();\n  return (\n    <Flex bg=\"gray.100\" align=\"center\" justify=\"center\">\n      <Box bg=\"white\" p={6} rounded=\"md\" w={64}>\n        <Formik\n          initialValues={{\n            name: '',\n            email: '',\n            password: '',\n          }}\n          validationSchema={SigninSchema}\n          onSubmit={(values, { resetForm }) => {\n            dispatch(registerThunk(values));\n            resetForm();\n          }}\n        >\n          {({ handleSubmit, errors, touched }) => (\n            <Form onSubmit={handleSubmit}>\n              <VStack spacing={4} align=\"flex-start\">\n                <FormControl isInvalid={!!errors.name && touched.name}>\n                  <FormLabel htmlFor=\"name\">Name</FormLabel>\n                  <Field\n                    as={Input}\n                    id=\"name\"\n                    name=\"name\"\n                    type=\"text\"\n                    variant=\"filled\"\n                  />\n                  <FormErrorMessage>{errors.name}</FormErrorMessage>\n                </FormControl>\n                <FormControl isInvalid={!!errors.email && touched.email}>\n                  <FormLabel htmlFor=\"email\">Email Address</FormLabel>\n                  <Field\n                    as={Input}\n                    id=\"email\"\n                    name=\"email\"\n                    type=\"email\"\n                    variant=\"filled\"\n                    placeholder=\"example@mail.com\"\n                  />\n                </FormControl>\n                <FormControl isInvalid={!!errors.password && touched.password}>\n                  <FormLabel htmlFor=\"password\">Password</FormLabel>\n                  <Field\n                    as={Input}\n                    id=\"password\"\n                    name=\"password\"\n                    type=\"password\"\n                    variant=\"filled\"\n                    autoComplete=\"off\"\n                  />\n                  <FormErrorMessage>{errors.password}</FormErrorMessage>\n                </FormControl>\n                <Button type=\"submit\" colorScheme=\"blue\" width=\"full\">\n                  Login\n                </Button>\n              </VStack>\n            </Form>\n          )}\n        </Formik>\n      </Box>\n    </Flex>\n  );\n};\nexport default Registration;\n"],"names":["SigninSchema","Yup","shape","name","min","max","required","password","email","dispatch","useDispatch","_jsx","Flex","bg","align","justify","children","Box","p","rounded","w","Formik","initialValues","validationSchema","onSubmit","values","_ref","resetForm","registerThunk","_ref2","handleSubmit","errors","touched","Form","_jsxs","VStack","spacing","FormControl","isInvalid","FormLabel","htmlFor","Field","as","Input","id","type","variant","FormErrorMessage","placeholder","autoComplete","Button","colorScheme","width"],"sourceRoot":""}